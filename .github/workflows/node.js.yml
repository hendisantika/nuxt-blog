name: Deploy Blog WEB APP
on:
  push:
    branches:
      - main
jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Pull environment form variable
        run: echo "$ENV_GITHUB" > .env_github

      - uses: actions/cache@v3
        name: Setup npm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-npm-store-${{ hashFiles('**/npm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-npm-store-

      - name: Install dependencies
        run: npm install --no-frozen-lockfile

      - name: Run Production
        run: npm run build

      - name: Upload app-artifacts for distribution
        uses: actions/upload-artifact@v4
        with:
          name: app-artifacts
          path: .output

      - name: Download app-artifacts for distribution
        uses: actions/download-artifact@v4
        with:
          name: app-artifacts
          path: |
            ${{ github.workspace }}
            !.git/
            /var/www/blog/

      - name: Display structure of downloaded files
        run: ls -R

      - name: Upload app-artifacts to remote folder
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ".output"
          target: "/var/www/blog/.output"
          strip_components: 1

      #      - name: Deploy to server
      #        uses: garygrossgarten/github-action-scp@release
      #        with:
      #          local: .output/
      #          remote: /var/www/portofolio2/.output/
      #          host: ${{ secrets.SSH_HOST }}
      #          username: ${{ secrets.SSH_USERNAME }}
      #          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
      #          recursive: true
      #          verbose: true
      #          dotfiles: true

      - name: Prepare Blog NuxtJS 3 Web App
        run: |
          echo ":: =========================== ::"
          echo "Run Blog NuxtJS 3 Web App"
          echo "HENDI SANTIKA Blog"
          echo ":: =========================== ::"

      - name: Restart webapp via pm2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            export PATH=$PATH:/home/deployer/.nvm/versions/node/v20.10.0/bin;
            pm2 restart "Blog WEB APP"
#  deploy-dev:
#    runs-on: ubuntu-latest
#    needs: build-deploy
#    steps:
#      - name: Deploy to server
#        uses: garygrossgarten/github-action-scp@release
#        with:
#          local: "app-artifacts.zip, ecosystem.config.cjs"
#          remote: /var/www/portofolio2/test
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USERNAME }}
#          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
#          recursive: true
#          verbose: true
#          dotfiles: true
#
#      - name: Prepare NuxtJS 3 Web App
#        run: |
#          echo ":: =========================== ::"
#          echo "Run NuxtJS 3 Web App"
#          echo "HENDI SANTIKA Portofolio"
#          echo ":: =========================== ::"
#          pm2 start "PORTOFOLIO2 WEB APP"
#
#      - name: Restart webapp via pm2
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USERNAME }}
#          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          port: ${{ secrets.SSH_PORT }}
#          script: |
#            export PATH=$PATH:/home/deployer/.nvm/versions/node/v20.10.0/bin;
#            pm2 restart "PORTOFOLIO2 WEB APP"
